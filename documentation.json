{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c8b1d03af24e66feaa462302a0ac7d8baa50d25db9402650d1653c2556b24a1283ee0a50acacb0e71ae9c2fde024b0a26f0868b36465a38e8d109e74175254cf",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ``\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonGroupComponent",
            "id": "component-ButtonGroupComponent-8269a1b90c997f7cdc6d496ba494cbc8ea28c03b3e60b4f068152a0219708e1527b0758848e79959c83088d0c92f603f6d9c4787a53dc7d9702732d1a17ef95b",
            "file": "src/app/button-group/button-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-group",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: flex;\n      flex-wrap: wrap;\n      gap: .5rem;\n    }\n  "
            ],
            "template": "<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-button-group',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-wrap: wrap;\n      gap: .5rem;\n    }\n  `]\n})\nexport class ButtonGroupComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: flex;\n      flex-wrap: wrap;\n      gap: .5rem;\n    }\n  \n"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-a556d0ceaeb2d53092a6b08a67b787013563d7801416dd83080adace26456f0c809520e74be2ff11c2509a77f92153edbc6f34f82e5dcb666c6a44efa84bb0db",
            "file": "src/stories/styles/examples/host-classes.stories.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [
                "\n    app-example { display: block; }\n    .bg-red { background: red; }\n    .text-blue { color: blue; }\n  "
            ],
            "template": "<app-example-text/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hostClasses",
                    "defaultValue": "hostClasses()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ExampleTextComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ExampleTextComponent} from \"../../../app/example-text/example-text/example-text.component\";\nimport { hostClasses } from \"projects/ng-badger/src/public-api\";\nimport {ButtonGroupComponent} from \"../../../app/button-group/button-group.component\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule, ExampleTextComponent, ButtonGroupComponent],\n  template: `\n    <app-example-text/>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    app-example { display: block; }\n    .bg-red { background: red; }\n    .text-blue { color: blue; }\n  `]\n})\nexport class ExampleComponent {\n  hostClasses = hostClasses();\n}\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [ExampleComponent, ButtonGroupComponent, GithubLinkComponent],\n  template: `\n    <app-github-link src=\"/src/stories/styles/examples/host-classes.stories.ts\"/>\n    <app-example #example/>\n    <app-button-group>\n      <button (click)=\"example.hostClasses.set('bg-red')\">\n        <code>hostClasses.set('bg-red')</code>\n      </button>\n      <button (click)=\"example.hostClasses.add('text-blue')\">\n        <code>hostClasses.add('text-blue')</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.get())\">\n        <code>console.log(hostClasses.get())</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.contains('bg-red'))\">\n        <code>console.log(hostClasses.contains('bg-red'))</code>\n      </button>\n      <button (click)=\"example.hostClasses.remove('bg-red')\">\n        <code>hostClasses.remove('bg-red')</code>\n      </button>\n      <button (click)=\"example.hostClasses.removeAll()\">\n        <code>hostClasses.removeAll()</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.swap('bg-red'))\">\n        <code>console.log(hostClasses.swap('bg-red'))</code>\n      </button>\n      <button (click)=\"example.hostClasses.toggle('bg-red')\">\n        <code>hostClasses.toggle('bg-red')</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.toString())\">\n        <code>console.log(hostClasses.toString())</code>\n      </button>\n    </app-button-group>\n  `\n})\nexport class ExampleWrapperComponent {\n  console = console;\n}\n\nexport default {\n  title: 'Styles/Examples/hostClasses',\n  component: ExampleWrapperComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleWrapperComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    app-example { display: block; }\n    .bg-red { background: red; }\n    .text-blue { color: blue; }\n  \n"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-08989580cd9192e95d647c55154b150a3577a8ba49a766733e97c229b618fba5cda8500a05f929dca1fbf4ea426d00faa73b551b8986ea561bdea8b37079d753-1",
            "file": "src/stories/styles/examples/host-listener.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-github-link src=\"/src/stories/styles/examples/host-listener.stories.ts\"/>\n<div style=\"padding: 100px; border: 1px dashed black; display: flex; flex-direction: column; justify-content: center; align-items: center;\">\n    <p>\n        Move mouse above this box to trigger events\n    </p>\n    <strong>{{ event$ | async }}</strong>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "event$",
                    "defaultValue": "merge(\n    hostListener('mouseenter').pipe(map(() => 'Mouse Enter')),\n    hostListener('mouseleave').pipe(map(() => 'Mouse Leave')),\n    hostListener('click').pipe(map(() => 'Mouse Click'))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "GithubLinkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component} from \"@angular/core\";\nimport {AsyncPipe} from \"@angular/common\";\nimport {hostListener} from \"projects/ng-badger/src/public-api\";\nimport {map, merge} from \"rxjs\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    GithubLinkComponent\n  ],\n  template: `\n      <app-github-link src=\"/src/stories/styles/examples/host-listener.stories.ts\"/>\n      <div style=\"padding: 100px; border: 1px dashed black; display: flex; flex-direction: column; justify-content: center; align-items: center;\">\n          <p>\n              Move mouse above this box to trigger events\n          </p>\n          <strong>{{ event$ | async }}</strong>\n      </div>\n  `\n})\nexport class ExampleComponent {\n  event$ = merge(\n    hostListener('mouseenter').pipe(map(() => 'Mouse Enter')),\n    hostListener('mouseleave').pipe(map(() => 'Mouse Leave')),\n    hostListener('click').pipe(map(() => 'Mouse Click'))\n  );\n}\n\nexport default {\n  title: 'Reactivity/Examples/hostListener',\n  component: ExampleComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ExampleComponent-1"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-5ccbd7d2164f488a6cadc0d755d896df00bbc15be48af8678fa5e892a241d7ec58f29917c6025e936f98983b39486f0459ac604c3a9623f2055becdf55604184-2",
            "file": "src/stories/styles/examples/host-styles.stories.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example",
            "styleUrls": [],
            "styles": [
                "\n    app-example {\n      display: block;\n    }\n  "
            ],
            "template": "<app-example-text/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hostStyles",
                    "defaultValue": "hostStyles({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ExampleTextComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonGroupComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ExampleTextComponent} from \"../../../app/example-text/example-text/example-text.component\";\nimport {hostStyles} from \"projects/ng-badger/src/public-api\";\nimport {ButtonGroupComponent} from \"../../../app/button-group/button-group.component\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule, ExampleTextComponent, ButtonGroupComponent],\n  template: `\n    <app-example-text/>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    app-example {\n      display: block;\n    }\n  `]\n})\nexport class ExampleComponent {\n  hostStyles = hostStyles({});\n}\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [ExampleComponent, ButtonGroupComponent, GithubLinkComponent],\n  template: `\n    <app-github-link src=\"/src/stories/styles/examples/host-styles.stories.ts\"/>\n    <app-example #example/>\n    <app-button-group>\n      <button (click)=\"example.hostStyles.set({ background: 'red' })\">\n        <code>hostStyles.set({{ \"{\" }} background: 'red' })</code>\n      </button>\n      <button (click)=\"example.hostStyles.add({color: 'blue'})\">\n        <code>hostStyles.add({{ \"{\" }} color: 'blue'})</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.get())\">\n        <code>console.log(hostStyles.get())</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.contains('background'))\">\n        <code>console.log(hostStyles.contains('background'))</code>\n      </button>\n      <button (click)=\"example.hostStyles.remove('background')\">\n        <code>hostStyles.remove('background')</code>\n      </button>\n      <button (click)=\"example.hostStyles.removeAll()\">\n        <code>hostStyles.removeAll()</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.swap({ background: 'red' }))\">\n        <code>console.log(hostStyles.swap({{ \"{\" }} background: 'red' }))</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.toString())\">\n        <code>console.log(hostStyles.toString())</code>\n      </button>\n    </app-button-group>\n  `\n})\nexport class ExampleWrapperComponent {\n  console = console;\n}\n\nexport default {\n  title: 'Styles/Examples/hostStyles',\n  component: ExampleWrapperComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleWrapperComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    app-example {\n      display: block;\n    }\n  \n",
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "ExampleComponent-2"
        },
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-ec69548832cb8a9445bdcbc1d9b323eccc1a0f2b4b8cc75c68d11b6369d37058f25712d7a0d9059e69b8c3aab551104b57188d14ce5109da21d3632e58483ae8-3",
            "file": "src/stories/styles/examples/zoneless-host-listener.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-github-link src=\"/src/stories/styles/examples/zoneless-host-listener.stories.ts\"/>\n<div\n  style=\"padding: 100px; border: 1px dashed black; display: flex; flex-direction: column; justify-content: center; align-items: center;\">\n  <p>\n    Open dev console and move mouse above this box to trigger events\n  </p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "event$",
                    "defaultValue": "merge(\n    zonelessHostListener('mouseenter').pipe(map(() => 'Mouse Enter')),\n    zonelessHostListener('mouseleave').pipe(map(() => 'Mouse Leave')),\n    zonelessHostListener('click').pipe(map(() => 'Mouse Click'))\n  )\n    .pipe(takeUntilDestroyed())\n    .subscribe(str => console.log(str))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "GithubLinkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component} from \"@angular/core\";\nimport {AsyncPipe} from \"@angular/common\";\nimport {zonelessHostListener} from \"projects/ng-badger/src/public-api\";\nimport {map, merge} from \"rxjs\";\nimport {takeUntilDestroyed} from \"@angular/core/rxjs-interop\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    GithubLinkComponent\n  ],\n  template: `\n    <app-github-link src=\"/src/stories/styles/examples/zoneless-host-listener.stories.ts\"/>\n    <div\n      style=\"padding: 100px; border: 1px dashed black; display: flex; flex-direction: column; justify-content: center; align-items: center;\">\n      <p>\n        Open dev console and move mouse above this box to trigger events\n      </p>\n    </div>\n  `\n})\nexport class ExampleComponent {\n  event$ = merge(\n    zonelessHostListener('mouseenter').pipe(map(() => 'Mouse Enter')),\n    zonelessHostListener('mouseleave').pipe(map(() => 'Mouse Leave')),\n    zonelessHostListener('click').pipe(map(() => 'Mouse Click'))\n  )\n    .pipe(takeUntilDestroyed())\n    .subscribe(str => console.log(str));\n}\n\nexport default {\n  title: 'Reactivity/Examples/zonelessHostListener',\n  component: ExampleComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "ExampleComponent-3"
        },
        {
            "name": "ExampleTextComponent",
            "id": "component-ExampleTextComponent-c1f7ab66424b847d369358869938749c9ea17c0ee22f123be2e595564e1f765a854d3e88c66848822ffce82c97c6426be7871aca2f8958e496d50ca7b6a6c992",
            "file": "src/app/example-text/example-text/example-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-text",
            "styleUrls": [],
            "styles": [],
            "template": "<p style=\"padding: 50px; border: 1px dashed black;\">\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-example-text',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <p style=\"padding: 50px; border: 1px dashed black;\">\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ExampleTextComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExampleWrapperComponent",
            "id": "component-ExampleWrapperComponent-a556d0ceaeb2d53092a6b08a67b787013563d7801416dd83080adace26456f0c809520e74be2ff11c2509a77f92153edbc6f34f82e5dcb666c6a44efa84bb0db",
            "file": "src/stories/styles/examples/host-classes.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-github-link src=\"/src/stories/styles/examples/host-classes.stories.ts\"/>\n<app-example #example/>\n<app-button-group>\n  <button (click)=\"example.hostClasses.set('bg-red')\">\n    <code>hostClasses.set('bg-red')</code>\n  </button>\n  <button (click)=\"example.hostClasses.add('text-blue')\">\n    <code>hostClasses.add('text-blue')</code>\n  </button>\n  <button (click)=\"console.log(example.hostClasses.get())\">\n    <code>console.log(hostClasses.get())</code>\n  </button>\n  <button (click)=\"console.log(example.hostClasses.contains('bg-red'))\">\n    <code>console.log(hostClasses.contains('bg-red'))</code>\n  </button>\n  <button (click)=\"example.hostClasses.remove('bg-red')\">\n    <code>hostClasses.remove('bg-red')</code>\n  </button>\n  <button (click)=\"example.hostClasses.removeAll()\">\n    <code>hostClasses.removeAll()</code>\n  </button>\n  <button (click)=\"console.log(example.hostClasses.swap('bg-red'))\">\n    <code>console.log(hostClasses.swap('bg-red'))</code>\n  </button>\n  <button (click)=\"example.hostClasses.toggle('bg-red')\">\n    <code>hostClasses.toggle('bg-red')</code>\n  </button>\n  <button (click)=\"console.log(example.hostClasses.toString())\">\n    <code>console.log(hostClasses.toString())</code>\n  </button>\n</app-button-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "console",
                    "defaultValue": "console",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ExampleComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonGroupComponent",
                    "type": "component"
                },
                {
                    "name": "GithubLinkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ExampleTextComponent} from \"../../../app/example-text/example-text/example-text.component\";\nimport { hostClasses } from \"projects/ng-badger/src/public-api\";\nimport {ButtonGroupComponent} from \"../../../app/button-group/button-group.component\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule, ExampleTextComponent, ButtonGroupComponent],\n  template: `\n    <app-example-text/>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    app-example { display: block; }\n    .bg-red { background: red; }\n    .text-blue { color: blue; }\n  `]\n})\nexport class ExampleComponent {\n  hostClasses = hostClasses();\n}\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [ExampleComponent, ButtonGroupComponent, GithubLinkComponent],\n  template: `\n    <app-github-link src=\"/src/stories/styles/examples/host-classes.stories.ts\"/>\n    <app-example #example/>\n    <app-button-group>\n      <button (click)=\"example.hostClasses.set('bg-red')\">\n        <code>hostClasses.set('bg-red')</code>\n      </button>\n      <button (click)=\"example.hostClasses.add('text-blue')\">\n        <code>hostClasses.add('text-blue')</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.get())\">\n        <code>console.log(hostClasses.get())</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.contains('bg-red'))\">\n        <code>console.log(hostClasses.contains('bg-red'))</code>\n      </button>\n      <button (click)=\"example.hostClasses.remove('bg-red')\">\n        <code>hostClasses.remove('bg-red')</code>\n      </button>\n      <button (click)=\"example.hostClasses.removeAll()\">\n        <code>hostClasses.removeAll()</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.swap('bg-red'))\">\n        <code>console.log(hostClasses.swap('bg-red'))</code>\n      </button>\n      <button (click)=\"example.hostClasses.toggle('bg-red')\">\n        <code>hostClasses.toggle('bg-red')</code>\n      </button>\n      <button (click)=\"console.log(example.hostClasses.toString())\">\n        <code>console.log(hostClasses.toString())</code>\n      </button>\n    </app-button-group>\n  `\n})\nexport class ExampleWrapperComponent {\n  console = console;\n}\n\nexport default {\n  title: 'Styles/Examples/hostClasses',\n  component: ExampleWrapperComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleWrapperComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ExampleWrapperComponent",
            "id": "component-ExampleWrapperComponent-5ccbd7d2164f488a6cadc0d755d896df00bbc15be48af8678fa5e892a241d7ec58f29917c6025e936f98983b39486f0459ac604c3a9623f2055becdf55604184-1",
            "file": "src/stories/styles/examples/host-styles.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-example-wrapper",
            "styleUrls": [],
            "styles": [],
            "template": "<app-github-link src=\"/src/stories/styles/examples/host-styles.stories.ts\"/>\n<app-example #example/>\n<app-button-group>\n  <button (click)=\"example.hostStyles.set({ background: 'red' })\">\n    <code>hostStyles.set({{ \"{\" }} background: 'red' })</code>\n  </button>\n  <button (click)=\"example.hostStyles.add({color: 'blue'})\">\n    <code>hostStyles.add({{ \"{\" }} color: 'blue'})</code>\n  </button>\n  <button (click)=\"console.log(example.hostStyles.get())\">\n    <code>console.log(hostStyles.get())</code>\n  </button>\n  <button (click)=\"console.log(example.hostStyles.contains('background'))\">\n    <code>console.log(hostStyles.contains('background'))</code>\n  </button>\n  <button (click)=\"example.hostStyles.remove('background')\">\n    <code>hostStyles.remove('background')</code>\n  </button>\n  <button (click)=\"example.hostStyles.removeAll()\">\n    <code>hostStyles.removeAll()</code>\n  </button>\n  <button (click)=\"console.log(example.hostStyles.swap({ background: 'red' }))\">\n    <code>console.log(hostStyles.swap({{ \"{\" }} background: 'red' }))</code>\n  </button>\n  <button (click)=\"console.log(example.hostStyles.toString())\">\n    <code>console.log(hostStyles.toString())</code>\n  </button>\n</app-button-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "console",
                    "defaultValue": "console",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ExampleComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonGroupComponent",
                    "type": "component"
                },
                {
                    "name": "GithubLinkComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import type {Meta, StoryObj} from \"@storybook/angular\";\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ExampleTextComponent} from \"../../../app/example-text/example-text/example-text.component\";\nimport {hostStyles} from \"projects/ng-badger/src/public-api\";\nimport {ButtonGroupComponent} from \"../../../app/button-group/button-group.component\";\nimport {GithubLinkComponent} from \"../../../app/github-link/github-link.component\";\n\n@Component({\n  selector: 'app-example',\n  standalone: true,\n  imports: [CommonModule, ExampleTextComponent, ButtonGroupComponent],\n  template: `\n    <app-example-text/>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styles: [`\n    app-example {\n      display: block;\n    }\n  `]\n})\nexport class ExampleComponent {\n  hostStyles = hostStyles({});\n}\n\n@Component({\n  selector: 'app-example-wrapper',\n  standalone: true,\n  imports: [ExampleComponent, ButtonGroupComponent, GithubLinkComponent],\n  template: `\n    <app-github-link src=\"/src/stories/styles/examples/host-styles.stories.ts\"/>\n    <app-example #example/>\n    <app-button-group>\n      <button (click)=\"example.hostStyles.set({ background: 'red' })\">\n        <code>hostStyles.set({{ \"{\" }} background: 'red' })</code>\n      </button>\n      <button (click)=\"example.hostStyles.add({color: 'blue'})\">\n        <code>hostStyles.add({{ \"{\" }} color: 'blue'})</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.get())\">\n        <code>console.log(hostStyles.get())</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.contains('background'))\">\n        <code>console.log(hostStyles.contains('background'))</code>\n      </button>\n      <button (click)=\"example.hostStyles.remove('background')\">\n        <code>hostStyles.remove('background')</code>\n      </button>\n      <button (click)=\"example.hostStyles.removeAll()\">\n        <code>hostStyles.removeAll()</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.swap({ background: 'red' }))\">\n        <code>console.log(hostStyles.swap({{ \"{\" }} background: 'red' }))</code>\n      </button>\n      <button (click)=\"console.log(example.hostStyles.toString())\">\n        <code>console.log(hostStyles.toString())</code>\n      </button>\n    </app-button-group>\n  `\n})\nexport class ExampleWrapperComponent {\n  console = console;\n}\n\nexport default {\n  title: 'Styles/Examples/hostStyles',\n  component: ExampleWrapperComponent\n} as Meta<ExampleComponent>;\n\n\nexport const Example: StoryObj<ExampleWrapperComponent> = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ExampleWrapperComponent-1"
        },
        {
            "name": "GithubLinkComponent",
            "id": "component-GithubLinkComponent-a4cfdc4b0e1a7073c68f10c2d780a019968099b258461f80a7d2bbc9223e45e157c02a40032606cdf51b154b624f72b6dd97ff347310474a821c6faa8936f90a",
            "file": "src/app/github-link/github-link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-github-link",
            "styleUrls": [],
            "styles": [
                "\n    .github-link {\n      border: 1px solid #ddd;\n      box-shadow: 0 0 5px 0 #ddd;\n      font-size: 1em;\n      line-height: 1em;\n      display: inline-flex;\n      gap: 10px;\n      padding: 10px 15px;\n      border-radius: 6px;\n      text-decoration: none;\n      color: black;\n      margin-bottom: 25px;\n      transition: all .2s;\n    }\n\n    .github-link:hover {\n      color: indigo;\n    }\n  "
            ],
            "template": "<a [href]=\"base + src\" class=\"github-link\" target=\"_blank\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 496 512\"><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"/></svg>\n  view in GitHub\n</a>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "required": true,
                    "name": "src",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 38,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "base",
                    "defaultValue": "'https://github.com/galczo5/ng-badger/tree/main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-github-link',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <a [href]=\"base + src\" class=\"github-link\" target=\"_blank\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 496 512\"><!--! Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"/></svg>\n      view in GitHub\n    </a>\n  `,\n  styles: [`\n    .github-link {\n      border: 1px solid #ddd;\n      box-shadow: 0 0 5px 0 #ddd;\n      font-size: 1em;\n      line-height: 1em;\n      display: inline-flex;\n      gap: 10px;\n      padding: 10px 15px;\n      border-radius: 6px;\n      text-decoration: none;\n      color: black;\n      margin-bottom: 25px;\n      transition: all .2s;\n    }\n\n    .github-link:hover {\n      color: indigo;\n    }\n  `]\n})\nexport class GithubLinkComponent {\n\n  @Input({ required: true })\n  src = '';\n\n  base = 'https://github.com/galczo5/ng-badger/tree/main';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .github-link {\n      border: 1px solid #ddd;\n      box-shadow: 0 0 5px 0 #ddd;\n      font-size: 1em;\n      line-height: 1em;\n      display: inline-flex;\n      gap: 10px;\n      padding: 10px 15px;\n      border-radius: 6px;\n      text-decoration: none;\n      color: black;\n      margin-bottom: 25px;\n      transition: all .2s;\n    }\n\n    .github-link:hover {\n      color: indigo;\n    }\n  \n"
        },
        {
            "name": "MethodComponent",
            "id": "component-MethodComponent-905c23bf732a60154ef4b9fc940c49cd9636040df0ec46c9d53708b70ccf6913cea171ec3365c25c83a8eaef4bfa6308530c514d6b83782a8decb47545374ce7",
            "file": "src/app/method/method.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-method",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      display: flex;\n      gap: 1rem;\n      padding: 1rem;\n      border: 1px solid #d1d5db;\n      border-radius: 4px;\n      margin-bottom: 1rem;\n      background: #f3f4f6;\n      color: black;\n      width: 100%;\n    }\n  "
            ],
            "template": "<code>{{ method }}</code>\n<div style=\"width: 1px; background: #d1d5db;\"></div>\n<div style=\"flex-grow: 1;\">\n  <ng-content></ng-content>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "method",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n  selector: 'app-method',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <code>{{ method }}</code>\n    <div style=\"width: 1px; background: #d1d5db;\"></div>\n    <div style=\"flex-grow: 1;\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      gap: 1rem;\n      padding: 1rem;\n      border: 1px solid #d1d5db;\n      border-radius: 4px;\n      margin-bottom: 1rem;\n      background: #f3f4f6;\n      color: black;\n      width: 100%;\n    }\n  `]\n})\nexport class MethodComponent {\n\n  @Input()\n  method = '';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      display: flex;\n      gap: 1rem;\n      padding: 1rem;\n      border: 1px solid #d1d5db;\n      border-radius: 4px;\n      margin-bottom: 1rem;\n      background: #f3f4f6;\n      color: black;\n      width: 100%;\n    }\n  \n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-4989a7957b85b84e1b3819bfa2cbf013128d74c83b520b47b25fd6a4659ef875550099a0b8d1f6b7a2a2d67a87a04cccff9d6c2db81ded88a36176440575d66c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/styles/examples/host-classes.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ExampleWrapperComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/styles/examples/host-listener.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ExampleComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/styles/examples/host-styles.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ExampleWrapperComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "Example",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/styles/examples/zoneless-host-listener.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ExampleComponent>",
                "defaultValue": "{}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  }\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/styles/examples/host-classes.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/styles/examples/host-classes.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ExampleWrapperComponent>",
                    "defaultValue": "{}"
                }
            ],
            "src/stories/styles/examples/host-listener.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/styles/examples/host-listener.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ExampleComponent>",
                    "defaultValue": "{}"
                }
            ],
            "src/stories/styles/examples/host-styles.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/styles/examples/host-styles.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ExampleWrapperComponent>",
                    "defaultValue": "{}"
                }
            ],
            "src/stories/styles/examples/zoneless-host-listener.stories.ts": [
                {
                    "name": "Example",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/styles/examples/zoneless-host-listener.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ExampleComponent>",
                    "defaultValue": "{}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  }\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-group/button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/example-text/example-text/example-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/github-link/github-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GithubLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/method/method.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MethodComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-classes.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-classes.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-classes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-listener.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-listener.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-styles.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-styles.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleWrapperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/host-styles.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/zoneless-host-listener.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/styles/examples/zoneless-host-listener.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Example",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}